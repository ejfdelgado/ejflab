
https://fonts.google.com/icons?icon.set=Material+Icons <mat-icon>help_outline</mat-icon>
https://fontawesome.com/icons?d=gallery FontAwesome

1. DEC en el grafo.
2. touch de la requisa + puntajes
3. touch de las herramientas de trabajo

5. optimizar el cleanvoice haciendo una lectura antes.

2. Triangulación
3. Permitir tener parámetros de los ángulos y distancias

- desarrollar arbol completo de guiones
- agregar tensorflow con mano
- desarrollar ejecución de animación a un npc especifico desde servidor node

Bugs:
  - permitir configurar el Live de st.voice o st.touch o points
  - desarrollar la mezcla de objetos, mejorada del assign

- set field of view
- guardar, progress
- download allow security

- Lanzar el entrenamiento de tensorflow
  - Leer los csv selecionados, validar los inputs name y output name.
  - Unirlos en un solo array
  - Lanzar
  - Conectar la visualización
  - Guardar el modelo generado como archivo de texto plano
  
- en la barra inferior de scroll colocar el número del frame donde está, debe ser de input también
- poner el logo de la persona y quitarlo automaticamente cuando se deslogea
- evitar que después de guardar se quede leyendo indefinidamente

https://firestore.googleapis.com/google.firestore.v1.Firestore/Listen/channel?VER=8&database=projects%2Fejfexperiments%2Fdatabases%2F(default)&gsessionid=xD7TtVhPZW9y1-kMkuVL0ZWVxf887eNYXZSWUxDj_ec&SID=CGzNDjRtq9M9pyCN5ktbMA&RID=36157&AID=272&zx=31lts6whg5wn&t=1

Generar el formulario para entrenamiento:
- Definir la cantidad de epochs,
- Un toggle que permita definir si es un reentrenamiento o comenzar desde cero.
- Un boton que diga entrenar.
- Integrar la funcionalidad de red neuronal.
- Agregar la visualización de loose.

ng new proyecto001
ng generate module libs/tensorflow --module app.module
ng generate module views/decisiontree --route decisiontree --module app.module
ng generate module views/uechat --route uechat --module app.module
ng generate component components/payupopup
ng generate pipe mycommon/pipes/fechaCard
ng generate pipe mycommon/pipes/sortByName
ng generate component mycommon/components/threejs-projection
ng generate component views/projection/components/license
ng generate component views/decisiontree/components/whenthen
ng generate component libs/threejs/threejs-gallery

ng generate component mycommon/components/onShow

ng generate component components/generic

ng generate component libs/threejs/threejs-projection

Hacer un validador de formulario de backend y front end con base en:
https://angular-training-guide.rangle.io/forms/reactive-forms/reactive-forms_custom_validation

9 FAILED_PRECONDITION: The database (default) is disabled for project ejfexperiments. The database has an App Engine app and this app is disabled. Please refer to https://cloud.google.com/firestore/docs/app-engine-requirement to unlink your database from App Engine

curl -X PATCH \
--header "Authorization: Bearer $(gcloud auth print-access-token)" \
--header "Content-type: application/json" \
--data '{"app_engine_integration_mode": "DISABLED"}' \
"https://firestore.googleapis.com/v1/projects/ejfexperiments/databases/(default)?updateMask=appEngineIntegrationMode"

Requerimientos no funcionales:
1. Se valida un JSON, cada campo por separado, se debe tener una librería de campos.
2. Usar Oracle 1 write N reads replicas.
3. Usar 

Human Pose
- agregar top menu, enlazar acciones faltantes, titulo dinamico.
- independicar desarrollo de lo que hay dentro de la lista de archivos
- agregar segundo etiquetado no editable para la respuesta de la red neuronal.

- Desarrollo play pause
- Desarrollar backend subir, abrir, guardar, borrar
- Agregar threejs con N modelos dependiendo del csv

MUST:

- modal con z-index 1001 para webcam capture.
- reactividad de pg y tuple con el usuario logeado.
- Hacer la directiva para edit in place on blur guardar.
- PWA https://danielk.tech/home/angular-pwa
- Usar kubernetes
- Agregar un contenedor básico de nodejs
- Agregar una forma de desplegar código jalando de git o de un bucket.

- Usar motor de template ¿tangular? ¿https://github.com/josdejong/jsoneditor?
- Permitir enviar correos, usar templates para los correos.

- lazy loading https://angular.io/guide/lazy-loading-ngmodules
- Permitir compartir los modelos a otros usuarios, por correo.
- Permitir modelo directo de firebase sin seguridad
- Recuperar contraseña
- Login con cellphone y ajustar user.metadata.email -> id

SHOULD:
- subir archivos de audio permitir un componente que tenga play y preloading
- QR y short-url
- Que cuando se logea o desloguea se actualice el valor de las tuplas en la página.
- Crear tarea programada para borrar todo (pg/auth/tuple/bucket/page-key)
- copiar/pegar las tuplas al portapapeles

- Apps:
 - Programador de ejecución de instancias de docker -> reconstrucción 3d, entrenamiento de tensorflow?
 - Streaming de audio wip
 - Juego de buscar algo en el mapa del mundo.
 - Juego de actores y marionetas.
 - Canvas compartido.

- evitar tener que cambiar la url de ROOT en Constants

<div *ngIf="currentUser !== null">
    <h1>{{ currentUser.displayName }}</h1>
    <h2>{{ currentUser.email }}</h2>
    <img [src]="currentUser.photoURL" height="26"/>
</div>

<button type="button" routerLink="/customers">Customers</button>
<button type="button" routerLink="">Home</button>


navigator.geolocation.getCurrentPosition((position) => { 
  console.log("Got position", position.coords);
  this.lat = position.coords.latitude; 
  this.lon = position.coords.longitude;
});