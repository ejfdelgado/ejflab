- Permitir borrar las páginas creadas por mí mismo -> crear tarea programada para borrar todo (tuplas/bucket/llaves/pg)
- Agregar fecha de actualización al card de página.
- Cuando se crea una página debe darse el permiso al creador.

- Proteger las rutas usando permisos de manera transversal.
- Se debe ofrecer un servicio para rescatar los archivos del bucket no publico protegido con permisos.
- Usar bucket pg/cv/idPage/idUsuario/

- cifrar el json de firebase y mandarlo en el index.html
- hacer lectura periódica de las llaves de la página, cifrar el firebase tuple-temp en vivo usando las llaves
- los archivos de la página deben quedar en una ruta no publica

- Crear la representacion de DB de usuario
- Fetch de la imagen de la persona logeada y agregarla al Card de Page.
- Editar los datos del usuario
- Streaming de audio wip

- recuperar contraseña
- login con cellphone
- QR y short-url

- Apps:
 - Juego de buscar algo en el mapa del mundo.
 - Juego de actores y marionetas.
 - Canvas compartido.

- cache en page srv y actualizar cuando el dato regresa
- evitar tener que cambiar la url en Constants

- Permitir tener N modelos por usuarios, poder luego abrir uno específico.
- Permitir compartir los modelos a otros usuarios, por correo, poder pedir permiso.
- Permitir enviar correos, usar templates para los correos.
- Crear servicio de búsqueda


<div *ngIf="currentUser !== null">
    <h1>{{ currentUser.displayName }}</h1>
    <h2>{{ currentUser.email }}</h2>
    <img [src]="currentUser.photoURL" height="26"/>
</div>

<button type="button" routerLink="/customers">Customers</button>
<button type="button" routerLink="">Home</button>


navigator.geolocation.getCurrentPosition((position) => { 
  console.log("Got position", position.coords);
  this.lat = position.coords.latitude; 
  this.lon = position.coords.longitude;
});