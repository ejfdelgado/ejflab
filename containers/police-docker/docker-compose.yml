version: "3"
# $ENV:HOME = 'c:/Users/MT DIAMOND'
# echo $ENV:HOME
# docker compose up -d
# docker compose down
# docker-compose logs -f police_nodejs
# docker-compose logs -f image_node_server
# docker-compose logs -f nginx
# docker-compose ps
# docker-compose build --no-cache
# docker images
# docker port police_nodejs
# docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' police_nodejs
# docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' mysql
# NodeServer: http://127.0.0.1:8081/uechat
# MySqlDatabase: http://localhost:8083/
# Server speech to text: http://localhost:2700/
# ssh root@<your_IP_address>

networks:
  mysql-phpmyadmin:
    name: mysql-phpmyadmin
    # use the bridge driver
    driver: bridge

volumes:
  mysqldata:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "${HOME}${FOLDER_MYSQL}"
  nodeapp:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "${HOME}${FOLDER_NODEAPP}"
  nginxwww:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "${HOME}${FOLDER_NGINX}/data/www"

services:
  police_speech_to_text:
    image: alphacep/kaldi-es:latest
    ports:
      - "2700:2700"
    networks:
      mysql-phpmyadmin:
        aliases:
          - police_speech_to_text

  police_mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "6033:3306"
    volumes:
      - mysqldata:/var/lib/mysql
    networks:
      mysql-phpmyadmin:
        aliases:
          - police_mysql

  police_phpmyadmin:
    image: phpmyadmin:5.2.0
    container_name: phpmyadmin
    links:
      - police_mysql
    environment:
      PMA_HOST: ${PMA_HOST}
      PMA_PORT: ${PMA_PORT}
    ports:
      - 8083:80
    networks:
      mysql-phpmyadmin:
        aliases:
          - police_phpmyadmin

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginxwww:/data/www
      - ${HOME}${FOLDER_NGINX}/reverse_proxy.conf:/etc/nginx/conf.d/default.conf
      - ${HOME}${FOLDER_NGINX}/cert/star_xx_com.pem:/etc/nginx/cert/star_xx_com.pem
      - ${HOME}${FOLDER_NGINX}/cert/star_xx_com.key:/etc/nginx/cert/star_xx_com.key
      - ${HOME}${FOLDER_NGINX}/cert/star_xx_com.crt:/etc/nginx/cert/star_xx_com.crt
    restart: always
    depends_on:
      - image_node_server
    links:
      - image_node_server
    networks:
      mysql-phpmyadmin:
        aliases:
          - nginx

  image_node_server:
    image: gcr.io/ejfexperiments/policiavr:v1.92
    container_name: image_node_server
    environment:
      USE_CACHE_FILES: "0"
      PMA_HOST: ${PMA_HOST}
      PMA_PORT: ${PMA_PORT}
      PORT: ${PORT}
      ENV: ${ENV}
      MYSQL_ROOT_USER: ${MYSQL_ROOT_USER}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - 8081:3000
    networks:
      mysql-phpmyadmin:
        aliases:
          - image_node_server

  police_nodejs:
    profiles:
      - donotstart
    build:
      context: .
      dockerfile: Dockerfile
    image: nodejs
    container_name: police_nodejs
    links:
      - police_mysql
    restart: unless-stopped
    environment:
      USE_CACHE_FILES: "0"
      PMA_HOST: ${PMA_HOST}
      PMA_PORT: ${PMA_PORT}
      PORT: ${PORT}
      ENV: ${ENV}
      MYSQL_ROOT_USER: ${MYSQL_ROOT_USER}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - ${NODE_PORT}
      - "2220:22"
    depends_on:
      - police_mysql
    volumes:
      - nodeapp:/home/node/app
    networks:
      mysql-phpmyadmin:
        aliases:
          - police_nodejs
